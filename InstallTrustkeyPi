#!/usr/bin/env bash

#---------------------------------------------------------------------------------------------
# Copyright (c) IBODigital GmbH. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#---------------------------------------------------------------------------------------------

#
# Bash script to install on-premise trustkey
#

# Open Ports (if ufw is installed)

echo "ufw (firewall) statements may fail. You can ignore them if ufw is not installed"
sudo ufw allow 8080
sudo ufw allow 8081
sudo ufw allow 80
sudo ufw allow 443
sudo ufw allow 3306
sudo ufw allow 9312

sudo apt-get update
sudo apt-get upgrade -y

# Install mariadb
sudo apt-get install mariadb-server -y

sudo mysql -u root -padmin -e "CREATE USER 'trustkeyadmin'@'%' identified by 'trustkeypassword';GRANT ALL PRIVILEGES ON *.* TO 'trustkeyadmin'@'%';FLUSH PRIVILEGES;"

echo '' | sudo tee -a /etc/mysql/my.cnf
echo '[mysqld]' | sudo tee -a /etc/mysql/my.cnf
echo 'lower_case_table_names=1' | sudo tee -a /etc/mysql/my.cnf

# disable the bind address
sudo sed -e '/bind-address/ s/^#*/#/' -i /etc/mysql/mariadb.conf.d/50-server.cnf

sudo /etc/init.d/mariadb restart



# Create envuironment variables

echo '# General Server' >> /home/pi/env_trustkey.conf
echo 'ENABLE_SSL=false' >> /home/pi/env_trustkey.conf
echo 'EXPOSED_PORT=80' >> /home/pi/env_trustkey.conf
echo 'SPHINX_HOST='$(/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)  >> /home/pi/env_trustkey.conf
echo '# Database settings' >> /home/pi/env_trustkey.conf
echo 'MYSQL_USER=trustkeyadmin' >> /home/pi/env_trustkey.conf
echo 'MYSQL_PASSWORD=trustkeypassword' >> /home/pi/env_trustkey.conf
echo 'MYSQL_SERVER='$(/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1) >> /home/pi/env_trustkey.conf
echo 'MYSQL_DISABLE_SSL=true' >> /home/pi/env_trustkey.conf
echo '' >> /home/pi/env_trustkey.conf
echo '# SMTP' >> /home/pi/env_trustkey.conf
echo 'MAIL_HOST=' >> /home/pi/env_trustkey.conf
echo 'MAIL_PORT=' >> /home/pi/env_trustkey.conf
echo 'MAIL_USERNAME=' >> /home/pi/env_trustkey.conf
echo 'MAIL_PASSWORD=' >> /home/pi/env_trustkey.conf
echo 'MAIL_SSL=' >> /home/pi/env_trustkey.conf
echo 'MAIL_ERROR=' >> /home/pi/env_trustkey.conf
echo 'MAIL_SENDER=noreply@trustkey.eu' >> /home/pi/env_trustkey.conf
echo '' >> /home/pi/env_trustkey.conf
echo '' >> /home/pi/env_trustkey.conf


# Install Docker
sudo apt-get update && sudo apt-get upgrade
curl -sSL https://get.docker.com | sh

sudo sh -eux <<EOF
# Install newuidmap & newgidmap binaries
apt-get install -y uidmap
EOF

sudo usermod -aG docker ${USER}
groups ${USER}

sudo apt-get install -y libffi-dev libssl-dev vim
sudo apt install -y python3-dev
sudo apt-get install -y python3 python3-pip
sudo pip3 install docker-compose
#sudo apt autoremove

sudo systemctl enable docker

dockerd-rootless-setuptool.sh install --force

sudo loginctl enable-linger pi

export PATH=/usr/bin:$PATH
export DOCKER_HOST=unix:///run/user/1000/docker.sock

# create the trustkey network
docker network create trustkey.net

echo "Docker will start on boot"
echo ""
echo "Next Steps:"
echo "sudo reboot"
echo "docker login"
echo "docker pull ibodigital/trustkey-premise-pi"
echo "docker run --env-file env_trustkey.conf --network trustkey.net --name trustkey-premise-pi -p 80:8080 -p 8081:8081 --restart=on-failure -d ibodigital/trustkey-premise-pi"
echo ""
echo "Finished"

